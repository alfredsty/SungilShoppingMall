/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.73
 * Generated at: 2022-08-22 05:18:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import DB.DBConnect;
import java.sql.*;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("DB.DBConnect");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	String sql="select max(custno) from member_tbl_02";

	Connection conn = DBConnect.getConnection();
	PreparedStatement pstmt = conn.prepareStatement(sql);
	ResultSet rs = pstmt.executeQuery();
	
	rs.next();
	int num = rs.getInt(1)+1;

      out.write("  \r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/style.css?abc\">\r\n");
      out.write("<title>join</title>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	function checkValue() {\r\n");
      out.write("		if(!document.data.custname.value) {\r\n");
      out.write("			alert(\"회원성명을 입력하세요.\");\r\n");
      out.write("			data.custname.focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		} \r\n");
      out.write("		else if(!document.data.phone.value) {\r\n");
      out.write("			alert(\"전화번호를 입력하세요.\");\r\n");
      out.write("			data.phone.focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		} \r\n");
      out.write("		else if (!document.data.address.value) {\r\n");
      out.write("			alert(\"주소를 입력하세요.\");\r\n");
      out.write("			data.address.focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		} \r\n");
      out.write("		else if (!document.data.joindate.value) {\r\n");
      out.write("			alert(\"가입일자를 입력하세요.\");\r\n");
      out.write("			data.joindate.focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		} \r\n");
      out.write("		else if (!document.data.grade.value) {\r\n");
      out.write("			alert(\"고객등급을 입력하세요.\");\r\n");
      out.write("			data.grade.focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}  \r\n");
      out.write("		else if (!document.data.city.value) {\r\n");
      out.write("			alert(\"도시코드를 입력하세요.\");\r\n");
      out.write("			data.city.focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		return true;\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<header>\r\n");
      out.write("	  ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "layout/header.jsp", out, false);
      out.write("\r\n");
      out.write(" </header>\r\n");
      out.write("\r\n");
      out.write(" <nav>\r\n");
      out.write("   	 ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "layout/nav.jsp", out, false);
      out.write("\r\n");
      out.write(" </nav>\r\n");
      out.write("		\r\n");
      out.write(" <section class=\"section\">\r\n");
      out.write("   	 <h2>홈쇼핑 회원 등록</h2><br>\r\n");
      out.write("\r\n");
      out.write("<form name=\"data\" action=\"join_p.jsp\" method=\"post\" onsubmit=\"return checkValue()\">\r\n");
      out.write("			<table class=\"table_line\">\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>회원번호(자동발생)</th>\r\n");
      out.write("					<td><input type=\"text\" name=\"custno\" value=\"");
      out.print( num );
      out.write("\"  readonly ></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>회원성명</th>\r\n");
      out.write("					<td><input type=\"text\" name=\"custname\" ></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>회원전화</th>\r\n");
      out.write("					<td><input type=\"text\" name=\"phone\" ></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>회원주소</th>\r\n");
      out.write("					<td><input type=\"text\" name=\"address\" ></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>가입일자</th>\r\n");
      out.write("					<td><input type=\"text\" name=\"joindate\" ></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>고객등급[A:VIP,B:일반,C:직원]</th>\r\n");
      out.write("					<td><input type=\"text\" name=\"grade\" ></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>도시코드</th>\r\n");
      out.write("					<td><input type=\"text\" name=\"city\" ></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr class=\"center\">\r\n");
      out.write("					<td  colspan=\"2\" >\r\n");
      out.write("						<input type=\"submit\" value=\"등록\">\r\n");
      out.write("						<input type=\"button\" value=\"취소\" onclick=\"location.href='join.jsp'\">\r\n");
      out.write("						<input type=\"button\" value=\"조회\" onclick=\"location.href='member_list.jsp'\">\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("		</form>	\r\n");
      out.write("   	\r\n");
      out.write(" </section>\r\n");
      out.write("		\r\n");
      out.write("<footer>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "layout/footer.jsp", out, false);
      out.write("\r\n");
      out.write("</footer>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
